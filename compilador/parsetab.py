
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BEGIN BOOL BOOLEAN CHARACTER COLON COMMA DECREMENT DIFFERENT DIVIDE DO ELSE END EQUALS FLOAT FOR GREATER GREATER_EQUAL ID IF INCREMENT INT INTEGER LESS LESS_EQUAL LKEY LPAREN MINUS MOD NOT OR PLUS PROGRAM REAL RKEY RPAREN SAME SEMICOLON STR STRING THEN TIMES TO VAR WHILE WRITEprogram : PROGRAM ID LKEY V BEGIN SEMICOLON statement_list END SEMICOLON RKEY\n    V : VAR content_var\n      |\n    \n    content_var : variable content_var\n                | variable\n    \n    variable : lista COLON INTEGER SEMICOLON\n             | lista COLON REAL SEMICOLON\n             | lista COLON STRING SEMICOLON\n             | lista COLON CHARACTER SEMICOLON\n             | lista COLON BOOLEAN SEMICOLON\n             | ID COLON INTEGER SEMICOLON\n             | ID COLON REAL SEMICOLON\n             | ID COLON STRING SEMICOLON\n             | ID COLON CHARACTER SEMICOLON\n             | ID COLON BOOLEAN SEMICOLON\n\n    \n    lista : ID\n          | ID COMMA lista\n    statement_list : statementstatement_list : statement_list statement\n    statement : assignment_stmt SEMICOLON\n              | expression_stmt SEMICOLON\n              | if_stmt\n              | while_stmt\n              | for_stmt\n              | write_stmt SEMICOLON\n              | change SEMICOLON\n    \n    write_stmt : WRITE LPAREN factor RPAREN\n               | WRITE LPAREN expression RPAREN\n               | WRITE LPAREN expression_string RPAREN\n               | WRITE LPAREN expression_bool RPAREN\n    \n    expression_stmt : expression\n                    | expression_bool\n    \n    assignment_stmt : ID ASSIGN expression\n                    | ID ASSIGN expression_bool\n                    | ID ASSIGN expression_string\n    \n    expression_string : expression_string PLUS STR_value\n                      | STR_value\n    \n    STR_value : STR\n    \n    if_stmt : IF LPAREN expression_bool RPAREN THEN LKEY statement_list RKEY\n            | IF LPAREN expression_bool RPAREN THEN LKEY statement_list RKEY ELSE LKEY statement_list RKEY\n    \n    while_stmt : WHILE LPAREN expression_bool RPAREN DO LKEY statement_list RKEY\n    \n    for_stmt : FOR LPAREN assignment_stmt SEMICOLON expression_bool SEMICOLON change RPAREN LKEY statement_list RKEY\n    \n    expression_bool : expression_bool AND comparation\n                    | expression_bool OR comparation\n                    | comparation\n    \n    comparation : expression GREATER expression\n                | expression GREATER_EQUAL expression\n                | expression LESS expression\n                | expression LESS_EQUAL expression\n                | expression DIFFERENT expression\n                | expression EQUALS expression\n                | factor_bool\n\n    \n    factor_bool : LPAREN expression_bool RPAREN\n    \n    factor_bool : BOOL\n    \n    expression : expression PLUS term\n               | expression MINUS term\n               | term\n    \n    term : term MOD factor\n         | term TIMES factor\n         | term DIVIDE factor\n         | factor\n    factor : LPAREN expression RPAREN\n    factor : INT\n           | FLOAT\n           | ID\n    \n    change : ID INCREMENT\n           | ID DECREMENT\n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,125,],[0,-1,]),'ID':([2,6,9,12,16,18,19,22,23,24,30,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,99,109,129,138,139,140,141,142,145,146,149,150,151,152,153,154,],[3,11,11,17,51,17,-18,-22,-23,-24,75,75,-19,-20,-21,-25,-26,75,75,75,75,75,75,75,75,75,75,75,75,116,75,75,75,75,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,75,75,75,17,17,144,17,17,-39,-41,17,17,17,17,-42,-40,]),'LKEY':([3,135,136,147,148,],[4,138,139,149,150,]),'VAR':([4,],[6,]),'BEGIN':([4,5,8,9,13,82,83,84,85,86,87,88,89,90,91,],[-3,7,-2,-5,-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,]),'SEMICOLON':([7,17,20,21,25,26,27,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,75,92,93,94,95,96,98,100,101,102,103,104,105,106,107,110,112,113,115,121,122,123,130,131,132,133,134,137,],[12,-65,58,59,60,61,-31,-32,-61,-57,-45,-52,-63,-64,-54,82,83,84,85,86,87,88,89,90,91,-66,-67,97,-65,-33,-34,-35,-37,-38,-55,-56,-46,-47,-48,-49,-50,-51,-43,-44,-62,-53,129,-58,-59,-60,-27,-28,-29,-30,-36,140,]),'COLON':([10,11,51,52,],[14,15,-16,-17,]),'COMMA':([11,51,],[16,16,]),'IF':([12,18,19,22,23,24,57,58,59,60,61,138,139,141,142,145,146,149,150,151,152,153,154,],[29,29,-18,-22,-23,-24,-19,-20,-21,-25,-26,29,29,29,29,-39,-41,29,29,29,29,-42,-40,]),'WHILE':([12,18,19,22,23,24,57,58,59,60,61,138,139,141,142,145,146,149,150,151,152,153,154,],[31,31,-18,-22,-23,-24,-19,-20,-21,-25,-26,31,31,31,31,-39,-41,31,31,31,31,-42,-40,]),'FOR':([12,18,19,22,23,24,57,58,59,60,61,138,139,141,142,145,146,149,150,151,152,153,154,],[32,32,-18,-22,-23,-24,-19,-20,-21,-25,-26,32,32,32,32,-39,-41,32,32,32,32,-42,-40,]),'WRITE':([12,18,19,22,23,24,57,58,59,60,61,138,139,141,142,145,146,149,150,151,152,153,154,],[33,33,-18,-22,-23,-24,-19,-20,-21,-25,-26,33,33,33,33,-39,-41,33,33,33,33,-42,-40,]),'LPAREN':([12,18,19,22,23,24,29,30,31,32,33,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,78,79,80,81,99,109,129,138,139,141,142,145,146,149,150,151,152,153,154,],[30,30,-18,-22,-23,-24,72,30,76,77,78,30,-19,-20,-21,-25,-26,99,99,99,99,99,99,99,99,109,109,109,109,30,99,99,99,99,109,109,30,30,30,30,-39,-41,30,30,30,30,-42,-40,]),'INT':([12,18,19,22,23,24,30,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,78,79,80,81,99,109,129,138,139,141,142,145,146,149,150,151,152,153,154,],[38,38,-18,-22,-23,-24,38,38,-19,-20,-21,-25,-26,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-39,-41,38,38,38,38,-42,-40,]),'FLOAT':([12,18,19,22,23,24,30,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,78,79,80,81,99,109,129,138,139,141,142,145,146,149,150,151,152,153,154,],[39,39,-18,-22,-23,-24,39,39,-19,-20,-21,-25,-26,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-39,-41,39,39,39,39,-42,-40,]),'BOOL':([12,18,19,22,23,24,30,53,57,58,59,60,61,70,71,72,76,78,109,129,138,139,141,142,145,146,149,150,151,152,153,154,],[40,40,-18,-22,-23,-24,40,40,-19,-20,-21,-25,-26,40,40,40,40,40,40,40,40,40,40,40,-39,-41,40,40,40,40,-42,-40,]),'INTEGER':([14,15,],[41,46,]),'REAL':([14,15,],[42,47,]),'STRING':([14,15,],[43,48,]),'CHARACTER':([14,15,],[44,49,]),'BOOLEAN':([14,15,],[45,50,]),'ASSIGN':([17,116,],[53,53,]),'INCREMENT':([17,144,],[54,54,]),'DECREMENT':([17,144,],[55,55,]),'MOD':([17,34,35,38,39,75,98,100,112,117,121,122,123,],[-65,-61,79,-63,-64,-65,79,79,-62,-61,-58,-59,-60,]),'TIMES':([17,34,35,38,39,75,98,100,112,117,121,122,123,],[-65,-61,80,-63,-64,-65,80,80,-62,-61,-58,-59,-60,]),'DIVIDE':([17,34,35,38,39,75,98,100,112,117,121,122,123,],[-65,-61,81,-63,-64,-65,81,81,-62,-61,-58,-59,-60,]),'PLUS':([17,27,34,35,38,39,73,75,92,94,95,96,98,100,101,102,103,104,105,106,108,112,117,118,119,121,122,123,126,134,],[-65,62,-61,-57,-63,-64,62,-65,62,124,-37,-38,-55,-56,62,62,62,62,62,62,62,-62,-61,62,124,-58,-59,-60,62,-36,]),'MINUS':([17,27,34,35,38,39,73,75,92,98,100,101,102,103,104,105,106,108,112,117,118,121,122,123,126,],[-65,63,-61,-57,-63,-64,63,-65,63,-55,-56,63,63,63,63,63,63,63,-62,-61,63,-58,-59,-60,63,]),'GREATER':([17,27,34,35,38,39,73,75,92,98,100,108,112,117,118,121,122,123,],[-65,64,-61,-57,-63,-64,64,-65,64,-55,-56,64,-62,-61,64,-58,-59,-60,]),'GREATER_EQUAL':([17,27,34,35,38,39,73,75,92,98,100,108,112,117,118,121,122,123,],[-65,65,-61,-57,-63,-64,65,-65,65,-55,-56,65,-62,-61,65,-58,-59,-60,]),'LESS':([17,27,34,35,38,39,73,75,92,98,100,108,112,117,118,121,122,123,],[-65,66,-61,-57,-63,-64,66,-65,66,-55,-56,66,-62,-61,66,-58,-59,-60,]),'LESS_EQUAL':([17,27,34,35,38,39,73,75,92,98,100,108,112,117,118,121,122,123,],[-65,67,-61,-57,-63,-64,67,-65,67,-55,-56,67,-62,-61,67,-58,-59,-60,]),'DIFFERENT':([17,27,34,35,38,39,73,75,92,98,100,108,112,117,118,121,122,123,],[-65,68,-61,-57,-63,-64,68,-65,68,-55,-56,68,-62,-61,68,-58,-59,-60,]),'EQUALS':([17,27,34,35,38,39,73,75,92,98,100,108,112,117,118,121,122,123,],[-65,69,-61,-57,-63,-64,69,-65,69,-55,-56,69,-62,-61,69,-58,-59,-60,]),'END':([18,19,22,23,24,57,58,59,60,61,145,146,153,154,],[56,-18,-22,-23,-24,-19,-20,-21,-25,-26,-39,-41,-42,-40,]),'RKEY':([19,22,23,24,57,58,59,60,61,97,141,142,145,146,151,152,153,154,],[-18,-22,-23,-24,-19,-20,-21,-25,-26,125,145,146,-39,-41,153,154,-42,-40,]),'AND':([28,34,35,36,37,38,39,40,74,75,93,98,100,101,102,103,104,105,106,107,110,111,112,113,114,120,121,122,123,137,],[70,-61,-57,-45,-52,-63,-64,-54,70,-65,70,-55,-56,-46,-47,-48,-49,-50,-51,-43,-44,70,-62,-53,70,70,-58,-59,-60,70,]),'OR':([28,34,35,36,37,38,39,40,74,75,93,98,100,101,102,103,104,105,106,107,110,111,112,113,114,120,121,122,123,137,],[71,-61,-57,-45,-52,-63,-64,-54,71,-65,71,-55,-56,-46,-47,-48,-49,-50,-51,-43,-44,71,-62,-53,71,71,-58,-59,-60,71,]),'RPAREN':([34,35,36,37,38,39,40,54,55,73,74,75,95,96,98,100,101,102,103,104,105,106,107,110,111,112,113,114,117,118,119,120,121,122,123,126,134,143,],[-61,-57,-45,-52,-63,-64,-54,-66,-67,112,113,-65,-37,-38,-55,-56,-46,-47,-48,-49,-50,-51,-43,-44,127,-62,-53,128,130,131,132,133,-58,-59,-60,112,-36,147,]),'STR':([53,78,124,],[96,96,96,]),'THEN':([127,],[135,]),'DO':([128,],[136,]),'ELSE':([145,],[148,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'V':([4,],[5,]),'content_var':([6,9,],[8,13,]),'variable':([6,9,],[9,9,]),'lista':([6,9,16,],[10,10,52,]),'statement_list':([12,138,139,149,150,],[18,141,142,151,152,]),'statement':([12,18,138,139,141,142,149,150,151,152,],[19,57,19,19,57,57,19,19,57,57,]),'assignment_stmt':([12,18,77,138,139,141,142,149,150,151,152,],[20,20,115,20,20,20,20,20,20,20,20,]),'expression_stmt':([12,18,138,139,141,142,149,150,151,152,],[21,21,21,21,21,21,21,21,21,21,]),'if_stmt':([12,18,138,139,141,142,149,150,151,152,],[22,22,22,22,22,22,22,22,22,22,]),'while_stmt':([12,18,138,139,141,142,149,150,151,152,],[23,23,23,23,23,23,23,23,23,23,]),'for_stmt':([12,18,138,139,141,142,149,150,151,152,],[24,24,24,24,24,24,24,24,24,24,]),'write_stmt':([12,18,138,139,141,142,149,150,151,152,],[25,25,25,25,25,25,25,25,25,25,]),'change':([12,18,138,139,140,141,142,149,150,151,152,],[26,26,26,26,143,26,26,26,26,26,26,]),'expression':([12,18,30,53,64,65,66,67,68,69,70,71,72,76,78,99,109,129,138,139,141,142,149,150,151,152,],[27,27,73,92,101,102,103,104,105,106,108,108,108,108,118,126,73,108,27,27,27,27,27,27,27,27,]),'expression_bool':([12,18,30,53,72,76,78,109,129,138,139,141,142,149,150,151,152,],[28,28,74,93,111,114,120,74,137,28,28,28,28,28,28,28,28,]),'factor':([12,18,30,53,62,63,64,65,66,67,68,69,70,71,72,76,78,79,80,81,99,109,129,138,139,141,142,149,150,151,152,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,117,121,122,123,34,34,34,34,34,34,34,34,34,34,34,]),'term':([12,18,30,53,62,63,64,65,66,67,68,69,70,71,72,76,78,99,109,129,138,139,141,142,149,150,151,152,],[35,35,35,35,98,100,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'comparation':([12,18,30,53,70,71,72,76,78,109,129,138,139,141,142,149,150,151,152,],[36,36,36,36,107,110,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'factor_bool':([12,18,30,53,70,71,72,76,78,109,129,138,139,141,142,149,150,151,152,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'expression_string':([53,78,],[94,119,]),'STR_value':([53,78,124,],[95,95,134,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID LKEY V BEGIN SEMICOLON statement_list END SEMICOLON RKEY','program',10,'p_program','yacc.py',25),
  ('V -> VAR content_var','V',2,'p_definition_var','yacc.py',32),
  ('V -> <empty>','V',0,'p_definition_var','yacc.py',33),
  ('content_var -> variable content_var','content_var',2,'p_content_var','yacc.py',40),
  ('content_var -> variable','content_var',1,'p_content_var','yacc.py',41),
  ('variable -> lista COLON INTEGER SEMICOLON','variable',4,'p_variable_2','yacc.py',47),
  ('variable -> lista COLON REAL SEMICOLON','variable',4,'p_variable_2','yacc.py',48),
  ('variable -> lista COLON STRING SEMICOLON','variable',4,'p_variable_2','yacc.py',49),
  ('variable -> lista COLON CHARACTER SEMICOLON','variable',4,'p_variable_2','yacc.py',50),
  ('variable -> lista COLON BOOLEAN SEMICOLON','variable',4,'p_variable_2','yacc.py',51),
  ('variable -> ID COLON INTEGER SEMICOLON','variable',4,'p_variable_2','yacc.py',52),
  ('variable -> ID COLON REAL SEMICOLON','variable',4,'p_variable_2','yacc.py',53),
  ('variable -> ID COLON STRING SEMICOLON','variable',4,'p_variable_2','yacc.py',54),
  ('variable -> ID COLON CHARACTER SEMICOLON','variable',4,'p_variable_2','yacc.py',55),
  ('variable -> ID COLON BOOLEAN SEMICOLON','variable',4,'p_variable_2','yacc.py',56),
  ('lista -> ID','lista',1,'p_lista','yacc.py',79),
  ('lista -> ID COMMA lista','lista',3,'p_lista','yacc.py',80),
  ('statement_list -> statement','statement_list',1,'p_statement_list_single','yacc.py',89),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_multiple','yacc.py',96),
  ('statement -> assignment_stmt SEMICOLON','statement',2,'p_statement','yacc.py',102),
  ('statement -> expression_stmt SEMICOLON','statement',2,'p_statement','yacc.py',103),
  ('statement -> if_stmt','statement',1,'p_statement','yacc.py',104),
  ('statement -> while_stmt','statement',1,'p_statement','yacc.py',105),
  ('statement -> for_stmt','statement',1,'p_statement','yacc.py',106),
  ('statement -> write_stmt SEMICOLON','statement',2,'p_statement','yacc.py',107),
  ('statement -> change SEMICOLON','statement',2,'p_statement','yacc.py',108),
  ('write_stmt -> WRITE LPAREN factor RPAREN','write_stmt',4,'p_write_stmt','yacc.py',115),
  ('write_stmt -> WRITE LPAREN expression RPAREN','write_stmt',4,'p_write_stmt','yacc.py',116),
  ('write_stmt -> WRITE LPAREN expression_string RPAREN','write_stmt',4,'p_write_stmt','yacc.py',117),
  ('write_stmt -> WRITE LPAREN expression_bool RPAREN','write_stmt',4,'p_write_stmt','yacc.py',118),
  ('expression_stmt -> expression','expression_stmt',1,'p_expression_stmt','yacc.py',125),
  ('expression_stmt -> expression_bool','expression_stmt',1,'p_expression_stmt','yacc.py',126),
  ('assignment_stmt -> ID ASSIGN expression','assignment_stmt',3,'p_assignment_stmt','yacc.py',133),
  ('assignment_stmt -> ID ASSIGN expression_bool','assignment_stmt',3,'p_assignment_stmt','yacc.py',134),
  ('assignment_stmt -> ID ASSIGN expression_string','assignment_stmt',3,'p_assignment_stmt','yacc.py',135),
  ('expression_string -> expression_string PLUS STR_value','expression_string',3,'p_expression_string','yacc.py',142),
  ('expression_string -> STR_value','expression_string',1,'p_expression_string','yacc.py',143),
  ('STR_value -> STR','STR_value',1,'p_value_string','yacc.py',153),
  ('if_stmt -> IF LPAREN expression_bool RPAREN THEN LKEY statement_list RKEY','if_stmt',8,'p_if_stmt','yacc.py',160),
  ('if_stmt -> IF LPAREN expression_bool RPAREN THEN LKEY statement_list RKEY ELSE LKEY statement_list RKEY','if_stmt',12,'p_if_stmt','yacc.py',161),
  ('while_stmt -> WHILE LPAREN expression_bool RPAREN DO LKEY statement_list RKEY','while_stmt',8,'p_while_stmt','yacc.py',171),
  ('for_stmt -> FOR LPAREN assignment_stmt SEMICOLON expression_bool SEMICOLON change RPAREN LKEY statement_list RKEY','for_stmt',11,'p_for_stmt','yacc.py',178),
  ('expression_bool -> expression_bool AND comparation','expression_bool',3,'p_expression_boolean_1','yacc.py',185),
  ('expression_bool -> expression_bool OR comparation','expression_bool',3,'p_expression_boolean_1','yacc.py',186),
  ('expression_bool -> comparation','expression_bool',1,'p_expression_boolean_1','yacc.py',187),
  ('comparation -> expression GREATER expression','comparation',3,'p_expression_boolean_2','yacc.py',197),
  ('comparation -> expression GREATER_EQUAL expression','comparation',3,'p_expression_boolean_2','yacc.py',198),
  ('comparation -> expression LESS expression','comparation',3,'p_expression_boolean_2','yacc.py',199),
  ('comparation -> expression LESS_EQUAL expression','comparation',3,'p_expression_boolean_2','yacc.py',200),
  ('comparation -> expression DIFFERENT expression','comparation',3,'p_expression_boolean_2','yacc.py',201),
  ('comparation -> expression EQUALS expression','comparation',3,'p_expression_boolean_2','yacc.py',202),
  ('comparation -> factor_bool','comparation',1,'p_expression_boolean_2','yacc.py',203),
  ('factor_bool -> LPAREN expression_bool RPAREN','factor_bool',3,'p_expression_boolean_group','yacc.py',214),
  ('factor_bool -> BOOL','factor_bool',1,'p_expression_boolean_bool','yacc.py',221),
  ('expression -> expression PLUS term','expression',3,'p_expression_1','yacc.py',228),
  ('expression -> expression MINUS term','expression',3,'p_expression_1','yacc.py',229),
  ('expression -> term','expression',1,'p_expression_1','yacc.py',230),
  ('term -> term MOD factor','term',3,'p_expression_2','yacc.py',240),
  ('term -> term TIMES factor','term',3,'p_expression_2','yacc.py',241),
  ('term -> term DIVIDE factor','term',3,'p_expression_2','yacc.py',242),
  ('term -> factor','term',1,'p_expression_2','yacc.py',243),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_expression_group','yacc.py',252),
  ('factor -> INT','factor',1,'p_expression_number','yacc.py',258),
  ('factor -> FLOAT','factor',1,'p_expression_number','yacc.py',259),
  ('factor -> ID','factor',1,'p_expression_number','yacc.py',260),
  ('change -> ID INCREMENT','change',2,'p_id_change','yacc.py',267),
  ('change -> ID DECREMENT','change',2,'p_id_change','yacc.py',268),
]
